<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.palette.h5.ego.dao.EgoMapper">

	
	<!-- HISTORY | HISTORY 전체 데이터 가져오기-->
	<select id="historyDataAll" parameterType="string" resultType="history">
		select
			hisId
			,hisDate
			,hisPeriod
			,hisTitle
			,hisContent
			,hisNo
		from
			history
		where hisId = #{hisId}
		order by hisDate asc
	</select>

	
	<!-- HISTORY | HISTORY 데이터중의 특정 hisNo의 데이터만 가져오기 -->
	<select id="selectHistoryOne" parameterType="history" resultType="history">
		select
			hisId
			,hisDate
			,hisPeriod
			,hisTitle
			,hisContent
			,hisNo
		from
			history
		where hisId = #{hisId} and hisNo = #{hisNo}
	</select>
	
	
	<!-- HISTORY | HISTORY 연도List 가져오기(중복X)-->
	<select id="historyYearList" parameterType="string" resultType="string">
		select distinct
			hisDate
		from
			history
		where
			hisId = #{hisId}
		order by hisDate asc
	</select>
	
	
	<!-- HISTORY | HISTORY 해당 year의 데이터들 불러오기 -->
	<select id="historyDataPerYear" parameterType="history" resultType="history">
		select
			hisId
			,hisDate
			,hisPeriod
			,hisTitle
			,hisContent
			,hisNo
		from 
			history
		where
			hisId = #{hisId} and hisDate = #{hisDate}
	</select>
	
	
	<!-- HISTORY | HISTORY 연도별 데이터 수 세기 -->
	<select id="countDataPerYear" parameterType="history" resultType="int">
		select count(*) as "countPerYear"
			from history
		where
			hisId = #{hisId} and hisDate = #{hisDate}	
	</select>
	
	
	<!-- HISTORY | HISTORY 데이터 추가하기-->
	<insert id="historyAddOne" parameterType="history">
		insert into
			history
			(
				hisId
				,hisDate
				,hisPeriod
				,hisTitle
				,hisContent
				,hisNo
			) values (
				#{hisId}
				,#{hisDate}
				,#{hisPeriod}
				,#{hisTitle}
				,#{hisContent}
				,history_seq.nextval
			)
	</insert>
	
	<!-- HISTORY | HISTORY 카운트 뽑아내기 -->
	
	
	<!-- HISTORY | HISTORY 데이터 수정하기-->
	<update id="historyUpdateOne" parameterType="history">
		update
			history
		set
			hisPeriod = #{hisPeriod}
			,hisTitle = #{hisTitle}
			,hisContent = #{hisContent}
		where
			hisId = #{hisId} and hisNo = #{hisNo}
	</update>
	
	<!-- HISTORY | HISTORY 데이터 삭제하기-->
	<delete id="historyDeleteOne" parameterType="history">
		delete
			history
		where
			hisId=#{hisId} and hisNo=#{hisNo}
	</delete>
	




</mapper>
